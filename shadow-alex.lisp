;;;; shadow-alex.lisp
;; Copyright Â© 2014-2015 Andrew Arvid Peterson <andy.arvid@gmail.com>
;; see LICENSE.txt (BSD-2 License)

(in-package #:clicl)


(defparameter *shadow-alexandria-symbols*
  '(
    (alexandria:alist-hash-table :shadow)
    (alexandria:alist-plist :shadow)
    (alexandria:appendf :shadow)
    (alexandria:array-index :shadow)
    (alexandria:array-length :shadow)
    (alexandria:assoc-value :shadow)
    (alexandria:binomial-coefficient :shadow)
    (alexandria:circular-list :shadow)
    (alexandria:circular-list-p :shadow)
    (alexandria:circular-tree-p :shadow)
    (alexandria:clamp :shadow)
    (alexandria:coercef :shadow)
    (alexandria:compose :shadow)
    (alexandria:conjoin :shadow)
    (alexandria:copy-array :shadow)
    (alexandria:copy-file :box-out)
    (alexandria:copy-hash-table :shadow)
    (alexandria:copy-sequence :shadow)
    (alexandria:copy-stream :box-out)  ;;??
    (alexandria:count-permutations :shadow)
    (alexandria:cswitch :shadow)
    (alexandria:curry :shadow)
    (alexandria:define-constant :shadow)
    (alexandria:delete-from-plist :shadow)
    (alexandria:delete-from-plistf :shadow)
    (alexandria:deletef :shadow)
    (alexandria:destructuring-case :shadow)
    (alexandria:destructuring-ccase :shadow)
    (alexandria:destructuring-ecase :shadow)
    (alexandria:disjoin :shadow)
    (alexandria:doplist :shadow)
    (alexandria:emptyp :shadow)
    (alexandria:ends-with :shadow)
    (alexandria:ends-with-subseq :shadow)
    (alexandria:ensure-car :shadow)
    (alexandria:ensure-cons :shadow)
    (alexandria:ensure-function :shadow)
    (alexandria:ensure-functionf :shadow)
    (alexandria:ensure-gethash :shadow)
    (alexandria:ensure-list :shadow)
    (alexandria:ensure-symbol :shadow)
    (alexandria:eswitch :shadow)
    (alexandria:extremum :shadow)
    (alexandria:factorial :shadow)
    (alexandria:featurep :box-out)
    (alexandria:first-elt :shadow)
    (alexandria:flatten :shadow)
    (alexandria:format-symbol :shadow)
    (alexandria:gaussian-random :shadow)
    (alexandria:hash-table-alist :shadow)
    (alexandria:hash-table-keys :shadow)
    (alexandria:hash-table-plist :shadow)
    (alexandria:hash-table-values :shadow)
    (alexandria:if-let :shadow)
    (alexandria:ignore-some-conditions :box-out)
    (alexandria:iota :shadow)
    (alexandria:last-elt :shadow)
    (alexandria:lastcar :shadow)
    (alexandria:length= :shadow)
    (alexandria:lerp :shadow)
    (alexandria:make-circular-list :shadow)
    (alexandria:make-gensym :shadow)
    (alexandria:make-gensym-list :shadow)
    (alexandria:make-keyword :shadow)
    (alexandria:map-combinations :shadow)
    (alexandria:map-derangements :shadow)
    (alexandria:map-iota :shadow)
    (alexandria:map-permutations :shadow)
    (alexandria:map-product :shadow)
    (alexandria:maphash-keys :shadow)
    (alexandria:maphash-values :shadow)
    (alexandria:mappend :shadow)
    (alexandria:maxf :shadow)
    (alexandria:mean :shadow)
    (alexandria:median :shadow)
    (alexandria:minf :shadow)
    (alexandria:multiple-value-compose :shadow)
    (alexandria:multiple-value-prog2 :shadow)
    (alexandria:named-lambda :shadow)
    (alexandria:nconcf :shadow)
    (alexandria:negative-double-float :shadow)
    (alexandria:negative-double-float-p :shadow)
    (alexandria:negative-fixnum :shadow)
    (alexandria:negative-fixnum-p :shadow)
    (alexandria:negative-float :shadow)
    (alexandria:negative-float-p :shadow)
    (alexandria:negative-integer :shadow)
    (alexandria:negative-integer-p :shadow)
    (alexandria:negative-long-float :shadow)
    (alexandria:negative-long-float-p :shadow)
    (alexandria:negative-rational :shadow)
    (alexandria:negative-rational-p :shadow)
    (alexandria:negative-real :shadow)
    (alexandria:negative-real-p :shadow)
    (alexandria:negative-short-float :shadow)
    (alexandria:negative-short-float-p :shadow)
    (alexandria:negative-single-float :shadow)
    (alexandria:negative-single-float-p :shadow)
    (alexandria:non-negative-double-float :shadow)
    (alexandria:non-negative-double-float-p :shadow)
    (alexandria:non-negative-fixnum :shadow)
    (alexandria:non-negative-fixnum-p :shadow)
    (alexandria:non-negative-float :shadow)
    (alexandria:non-negative-float-p :shadow)
    (alexandria:non-negative-integer :shadow)
    (alexandria:non-negative-integer-p :shadow)
    (alexandria:non-negative-long-float :shadow)
    (alexandria:non-negative-long-float-p :shadow)
    (alexandria:non-negative-rational :shadow)
    (alexandria:non-negative-rational-p :shadow)
    (alexandria:non-negative-real :shadow)
    (alexandria:non-negative-real-p :shadow)
    (alexandria:non-negative-short-float :shadow)
    (alexandria:non-negative-short-float-p :shadow)
    (alexandria:non-negative-single-float :shadow)
    (alexandria:non-negative-single-float-p :shadow)
    (alexandria:non-positive-double-float :shadow)
    (alexandria:non-positive-double-float-p :shadow)
    (alexandria:non-positive-fixnum :shadow)
    (alexandria:non-positive-fixnum-p :shadow)
    (alexandria:non-positive-float :shadow)
    (alexandria:non-positive-float-p :shadow)
    (alexandria:non-positive-integer :shadow)
    (alexandria:non-positive-integer-p :shadow)
    (alexandria:non-positive-long-float :shadow)
    (alexandria:non-positive-long-float-p :shadow)
    (alexandria:non-positive-rational :shadow)
    (alexandria:non-positive-rational-p :shadow)
    (alexandria:non-positive-real :shadow)
    (alexandria:non-positive-real-p :shadow)
    (alexandria:non-positive-short-float :shadow)
    (alexandria:non-positive-short-float-p :shadow)
    (alexandria:non-positive-single-float :shadow)
    (alexandria:non-positive-single-float-p :shadow)
    (alexandria:nreversef :shadow)
    (alexandria:nth-value-or :shadow)
    (alexandria:nunionf :shadow)
    (alexandria:of-type :shadow)
    (alexandria:once-only :shadow)
    (alexandria:ordinary-lambda-list-keywords :shadow)
    (alexandria:parse-body :shadow)
    (alexandria:parse-ordinary-lambda-list :shadow)
    (alexandria:plist-alist :shadow)
    (alexandria:plist-hash-table :shadow)
    (alexandria:positive-double-float :shadow)
    (alexandria:positive-double-float-p :shadow)
    (alexandria:positive-fixnum :shadow)
    (alexandria:positive-fixnum-p :shadow)
    (alexandria:positive-float :shadow)
    (alexandria:positive-float-p :shadow)
    (alexandria:positive-integer :shadow)
    (alexandria:positive-integer-p :shadow)
    (alexandria:positive-long-float :shadow)
    (alexandria:positive-long-float-p :shadow)
    (alexandria:positive-rational :shadow)
    (alexandria:positive-rational-p :shadow)
    (alexandria:positive-real :shadow)
    (alexandria:positive-real-p :shadow)
    (alexandria:positive-short-float :shadow)
    (alexandria:positive-short-float-p :shadow)
    (alexandria:positive-single-float :shadow)
    (alexandria:positive-single-float-p :shadow)
    (alexandria:proper-list :shadow)
    (alexandria:proper-list-length :shadow)
    (alexandria:proper-list-p :shadow)
    (alexandria:proper-sequence :shadow)
   (alexandria:random-elt :shadow)
    (alexandria:rassoc-value :shadow)
    (alexandria:rcurry :shadow)
    (alexandria:read-file-into-byte-vector :box-out)
    (alexandria:read-file-into-string :box-out)
    (alexandria:remove-from-plist :shadow)
    (alexandria:remove-from-plistf :shadow)
    (alexandria:removef :shadow)
    (alexandria:required-argument :shadow) ;;??
    (alexandria:reversef :shadow)
    (alexandria:rotate :shadow)
    (alexandria:sequence-of-length-p :shadow)
    (alexandria:set-equal :shadow)
    (alexandria:setp :shadow)
    (alexandria:shuffle :shadow)
    (alexandria:simple-parse-error :shadow)
    (alexandria:simple-program-error :shadow)
    (alexandria:simple-reader-error :shadow)
    (alexandria:simple-style-warning :shadow)
    (alexandria:standard-deviation :shadow)
    (alexandria:starts-with :shadow)
    (alexandria:starts-with-subseq :shadow)
    (alexandria:string-designator :shadow)
    (alexandria:subfactorial :shadow)
    (alexandria:switch :shadow)
    (alexandria:symbolicate :shadow)
    (alexandria:type= :shadow)
    (alexandria:unionf :shadow)
    (alexandria:unwind-protect-case :box-out)
    (alexandria:variance :shadow)
    (alexandria:when-let :shadow)
    (alexandria:when-let* :shadow)
    (alexandria:whichever :shadow)
    (alexandria:with-gensyms :shadow)
    (alexandria:with-input-from-file :box-out)
    (alexandria:with-output-to-file :box-out)
    (alexandria:with-unique-names :shadow)
    (alexandria:write-byte-vector-into-file :box-out)
    (alexandria:write-string-into-file :box-out)
    (alexandria:xor :shadow)
    ))
